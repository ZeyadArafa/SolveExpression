<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="butPostfix.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>